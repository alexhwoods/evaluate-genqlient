// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package genqlient

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetRepositoryRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type GetRepositoryRepository struct {
	// The name of the repository.
	Name string `json:"name"`
	// The description of the repository.
	Description string `json:"description"`
	// The HTTP URL for this repository
	Url string `json:"url"`
	// Returns a count of how many stargazers there are on this object
	StargazerCount int `json:"stargazerCount"`
}

// GetName returns GetRepositoryRepository.Name, and is useful for accessing the field via an interface.
func (v *GetRepositoryRepository) GetName() string { return v.Name }

// GetDescription returns GetRepositoryRepository.Description, and is useful for accessing the field via an interface.
func (v *GetRepositoryRepository) GetDescription() string { return v.Description }

// GetUrl returns GetRepositoryRepository.Url, and is useful for accessing the field via an interface.
func (v *GetRepositoryRepository) GetUrl() string { return v.Url }

// GetStargazerCount returns GetRepositoryRepository.StargazerCount, and is useful for accessing the field via an interface.
func (v *GetRepositoryRepository) GetStargazerCount() int { return v.StargazerCount }

// GetRepositoryResponse is returned by GetRepository on success.
type GetRepositoryResponse struct {
	// Lookup a given repository by the owner and repository name.
	Repository GetRepositoryRepository `json:"repository"`
}

// GetRepository returns GetRepositoryResponse.Repository, and is useful for accessing the field via an interface.
func (v *GetRepositoryResponse) GetRepository() GetRepositoryRepository { return v.Repository }

func GetRepository(
	ctx context.Context,
	client graphql.Client,
) (*GetRepositoryResponse, error) {
	req := &graphql.Request{
		OpName: "GetRepository",
		Query: `
query GetRepository {
	repository(name: "kubernetes", owner: "kubernetes") {
		name
		description
		url
		stargazerCount
	}
}
`,
	}
	var err error

	var data GetRepositoryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
